var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var AppStoreError = /** @class */ (function (_super) {
    __extends(AppStoreError, _super);
    function AppStoreError(errorCode, errorMessage) {
        var _this = _super.call(this, errorMessage) || this;
        _this.errorCode = errorCode;
        _this.isRetryable = AppStoreError.RETRYABLE_ERRORS.includes(errorCode);
        _this.isRateLimitExceeded = errorCode === 4290000;
        return _this;
    }
    // The following errors indicate that the request can be tried again.
    // See https://developer.apple.com/documentation/appstoreserverapi/error_codes
    // for a list of all errors.
    AppStoreError.RETRYABLE_ERRORS = [
        4040002,
        4040004,
        5000001,
        4040006 // OriginalTransactionIdNotFoundRetryableError
    ];
    return AppStoreError;
}(Error));
export { AppStoreError };
var CertificateValidationError = /** @class */ (function (_super) {
    __extends(CertificateValidationError, _super);
    function CertificateValidationError(certificates) {
        var _this = _super.call(this, "Certificate validation failed") || this;
        _this.certificates = certificates;
        return _this;
    }
    return CertificateValidationError;
}(Error));
export { CertificateValidationError };
