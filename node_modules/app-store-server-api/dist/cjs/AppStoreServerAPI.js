"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppStoreServerAPI = void 0;
var node_fetch_1 = __importDefault(require("node-fetch"));
var uuid_1 = require("uuid");
var jose = __importStar(require("jose"));
var Models_1 = require("./Models");
var Errors_1 = require("./Errors");
var AppStoreServerAPI = /** @class */ (function () {
    /**
     * @param key the key downloaded from App Store Connect in PEM-encoded PKCS8 format.
     * @param keyId the id of the key, retrieved from App Store Connect
     * @param issuerId your issuer ID, retrieved from App Store Connect
     * @param bundleId bundle ID of your app
     */
    function AppStoreServerAPI(key, keyId, issuerId, bundleId, environment) {
        if (environment === void 0) { environment = Models_1.Environment.Production; }
        this.tokenExpiry = new Date(0);
        this.key = jose.importPKCS8(key, "ES256");
        this.keyId = keyId;
        this.issuerId = issuerId;
        this.bundleId = bundleId;
        this.environment = environment;
        if (environment === Models_1.Environment.Sandbox) {
            this.baseUrl = "https://api.storekit-sandbox.itunes.apple.com";
        }
        else {
            this.baseUrl = "https://api.storekit.itunes.apple.com";
        }
    }
    // API Endpoints
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history
     */
    AppStoreServerAPI.prototype.getTransactionHistory = function (transactionId, query) {
        if (query === void 0) { query = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var path;
            return __generator(this, function (_a) {
                path = this.addQuery("/inApps/v1/history/".concat(transactionId), __assign({}, query));
                return [2 /*return*/, this.makeRequest("GET", path)];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/get_transaction_info
     */
    AppStoreServerAPI.prototype.getTransactionInfo = function (transactionId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.makeRequest("GET", "/inApps/v1/transactions/".concat(transactionId))];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/get_all_subscription_statuses
     */
    AppStoreServerAPI.prototype.getSubscriptionStatuses = function (transactionId, query) {
        if (query === void 0) { query = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var path;
            return __generator(this, function (_a) {
                path = this.addQuery("/inApps/v1/subscriptions/".concat(transactionId), __assign({}, query));
                return [2 /*return*/, this.makeRequest("GET", path)];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/look_up_order_id
     */
    AppStoreServerAPI.prototype.lookupOrder = function (orderId) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.makeRequest("GET", "/inApps/v1/lookup/".concat(orderId))];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/extend_a_subscription_renewal_date
     */
    AppStoreServerAPI.prototype.extendSubscriptionRenewalDate = function (originalTransactionId, request) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.makeRequest("PUT", "/inApps/v1/subscriptions/extend/".concat(originalTransactionId), request)];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/request_a_test_notification
     */
    AppStoreServerAPI.prototype.requestTestNotification = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.makeRequest("POST", "/inApps/v1/notifications/test")];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/get_test_notification_status
     */
    AppStoreServerAPI.prototype.getTestNotificationStatus = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.makeRequest("GET", "/inApps/v1/notifications/test/".concat(id))];
            });
        });
    };
    /**
     * https://developer.apple.com/documentation/appstoreserverapi/get_notification_history
     */
    AppStoreServerAPI.prototype.getNotificationHistory = function (request, query) {
        if (query === void 0) { query = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var path;
            return __generator(this, function (_a) {
                path = this.addQuery("/inApps/v1/notifications/history", __assign({}, query));
                return [2 /*return*/, this.makeRequest("POST", path, request)];
            });
        });
    };
    /**
     * Performs a network request against the API and handles the result.
     */
    AppStoreServerAPI.prototype.makeRequest = function (method, path, body) {
        return __awaiter(this, void 0, void 0, function () {
            var token, url, serializedBody, result, _a, body_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.getToken()];
                    case 1:
                        token = _b.sent();
                        url = this.baseUrl + path;
                        serializedBody = body ? JSON.stringify(body) : undefined;
                        return [4 /*yield*/, (0, node_fetch_1.default)(url, {
                                method: method,
                                body: serializedBody,
                                headers: {
                                    Authorization: "Bearer ".concat(token),
                                    "Content-Type": "application/json"
                                }
                            })];
                    case 2:
                        result = _b.sent();
                        if (result.status === 200) {
                            return [2 /*return*/, result.json()];
                        }
                        _a = result.status;
                        switch (_a) {
                            case 400: return [3 /*break*/, 3];
                            case 403: return [3 /*break*/, 3];
                            case 404: return [3 /*break*/, 3];
                            case 429: return [3 /*break*/, 3];
                            case 500: return [3 /*break*/, 3];
                            case 401: return [3 /*break*/, 5];
                        }
                        return [3 /*break*/, 6];
                    case 3: return [4 /*yield*/, result.json()];
                    case 4:
                        body_1 = _b.sent();
                        throw new Errors_1.AppStoreError(body_1.errorCode, body_1.errorMessage);
                    case 5:
                        this.token = undefined;
                        throw new Error("The request is unauthorized; the JSON Web Token (JWT) is invalid.");
                    case 6: throw new Error("An unknown error occurred");
                }
            });
        });
    };
    /**
     * Returns an existing authentication token (if its still valid) or generates a new one.
     */
    AppStoreServerAPI.prototype.getToken = function () {
        return __awaiter(this, void 0, void 0, function () {
            var now, expiry, expirySeconds, payload, privateKey, jwt;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        // Reuse previously created token if it hasn't expired.
                        if (this.token && !this.tokenExpired)
                            return [2 /*return*/, this.token
                                // Tokens must expire after at most 1 hour.
                            ];
                        now = new Date();
                        expiry = new Date(now.getTime() + AppStoreServerAPI.maxTokenAge * 1000);
                        expirySeconds = Math.floor(expiry.getTime() / 1000);
                        payload = {
                            bid: this.bundleId,
                            nonce: (0, uuid_1.v4)()
                        };
                        return [4 /*yield*/, this.key];
                    case 1:
                        privateKey = _a.sent();
                        return [4 /*yield*/, new jose.SignJWT(payload)
                                .setProtectedHeader({ alg: "ES256", kid: this.keyId, typ: "JWT" })
                                .setIssuer(this.issuerId)
                                .setIssuedAt()
                                .setExpirationTime(expirySeconds)
                                .setAudience("appstoreconnect-v1")
                                .sign(privateKey)];
                    case 2:
                        jwt = _a.sent();
                        this.token = jwt;
                        this.tokenExpiry = expiry;
                        return [2 /*return*/, jwt];
                }
            });
        });
    };
    Object.defineProperty(AppStoreServerAPI.prototype, "tokenExpired", {
        /**
         * Returns whether the previously generated token can still be used.
         */
        get: function () {
            // We consider the token to be expired slightly before it actually is to allow for some networking latency.
            var headroom = 60; // seconds
            var now = new Date();
            var cutoff = new Date(now.getTime() - headroom * 1000);
            return !this.tokenExpiry || this.tokenExpiry < cutoff;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Serializes a query object into a query string and appends it
     * the provided path.
     */
    AppStoreServerAPI.prototype.addQuery = function (path, query) {
        var params = new URLSearchParams();
        for (var _i = 0, _a = Object.entries(query); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            if (Array.isArray(value)) {
                for (var _c = 0, value_1 = value; _c < value_1.length; _c++) {
                    var item = value_1[_c];
                    params.append(key, item.toString());
                }
            }
            else {
                params.set(key, value.toString());
            }
        }
        var queryString = params.toString();
        if (queryString === "") {
            return path;
        }
        else {
            return "".concat(path, "?").concat(queryString);
        }
    };
    // The maximum age that an authentication token is allowed to have, as decided by Apple.
    AppStoreServerAPI.maxTokenAge = 3600; // seconds, = 1 hour
    return AppStoreServerAPI;
}());
exports.AppStoreServerAPI = AppStoreServerAPI;
